{"version":3,"sources":["webpack:///./src/components/sidebar-stripped.tsx","webpack:///./src/styles/cert.module.scss","webpack:///./src/templates/cert.tsx"],"names":["Sidebar","render","className","styles","sidebar","to","social","type","id","React","Component","module","exports","BlogCertTemplate","cert","data","markdownRemark","validation","frontmatter","cert_url","href","title","icon","faClipboardCheck","file","fileEmbed","internal","mediaType","match","src","publicURL","alt","certStyles","image","embed","content","date","issuer_url","issuer","pageQuery"],"mappings":"qKAOMA,E,gLACJC,OAAA,WACE,OACE,2BAAOC,UAAWC,IAAOC,SACvB,gCAAQ,kBAAC,IAAD,CAAMC,GAAG,KAAT,aACR,6BAASH,UAAWC,IAAOG,QACzB,kBAAC,IAAD,CAAYC,KAAK,UAAUC,GAAG,aAC9B,kBAAC,IAAD,CAAYD,KAAK,eAAeC,GAAG,gBACnC,kBAAC,IAAD,CAAYD,KAAK,SAASC,GAAG,gBAC7B,kBAAC,IAAD,CAAYD,KAAK,YAAYC,GAAG,cAChC,kBAAC,IAAD,CAAYD,KAAK,SAASC,GAAG,aAC7B,kBAAC,IAAD,CAAYD,KAAK,WAAWC,GAAG,eAC/B,kBAAC,IAAD,CAAYD,KAAK,gBAAgBC,GAAG,YACpC,kBAAC,IAAD,CAAYD,KAAK,UAAUC,GAAG,oB,GAblBC,IAAMC,WAoBbV,O,qBC1BfW,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,MAAQ,8B,gNC6C/CC,UAjCU,SAAC,GAAgD,IAClEC,EADkE,EAA9CC,KACRC,eACZC,EAAaH,EAAKI,YAAYC,SAClC,uBAAGC,KAAMN,EAAKI,YAAYC,SAAUE,MAAM,qCACxC,kBAAC,IAAD,CAAiBC,KAAMC,OACzB,KAEIC,EAAOV,EAAKI,YAAYJ,KAExBW,EAAYD,EAAKE,SAASC,UAAUC,MAAM,gBAC9C,yBAAKC,IAAKL,EAAKM,UAAWC,IAAI,cAAc7B,UAAW8B,IAAWC,QAClE,2BAAO1B,KAAK,kBAAkBsB,IAAKL,EAAKM,UAAW5B,UAAW8B,IAAWE,QAE3E,OACE,yBAAKhC,UAAU,aACb,kBAAC,IAAD,CAAKmB,MAAOP,EAAKI,YAAYG,QAC7B,kBAAC,IAAD,MACA,6BAASnB,UAAWC,IAAOgC,SACzB,gCACE,4BAAKrB,EAAKI,YAAYG,OACtB,2BACGP,EAAKI,YAAYkB,KADpB,OAGE,uBAAGhB,KAAMN,EAAKI,YAAYmB,WAAYhB,MAAM,oBAAoBP,EAAKI,YAAYoB,QAHnF,IAIGrB,GAEDQ,MASL,IAAMc,EAAY","file":"component---src-templates-cert-tsx-2dec58697fcc17d672be.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nimport SocialIcon from './social-icon';\n\nimport styles from '../styles/sidebar.module.scss';\n\nclass Sidebar extends React.Component {\n  render(): JSX.Element {\n    return (\n      <aside className={styles.sidebar}>\n        <header><Link to='/'>rvaccaro</Link></header>\n        <section className={styles.social}>\n          <SocialIcon type=\"CodePen\" id=\"rvaccaro\" />\n          <SocialIcon type=\"FreeCodeCamp\" id=\"robertito13\" />\n          <SocialIcon type=\"GitHub\" id=\"robertito13\" />\n          <SocialIcon type=\"Goodreads\" id=\"112815172\" />\n          <SocialIcon type=\"LastFM\" id=\"rvaccaro\" />\n          <SocialIcon type=\"LinkedIn\" id=\"rvaccaro85\" />\n          <SocialIcon type=\"StackOverflow\" id=\"4467281\" />\n          <SocialIcon type=\"Twitter\" id=\"robertitov13\" />\n        </section>\n      </aside>\n    );\n  }\n}\n\nexport default Sidebar;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embed\":\"cert-module--embed--2hH-a\",\"image\":\"cert-module--image--33Oh-\"};","import React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboardCheck } from '@fortawesome/free-solid-svg-icons';\n\nimport Sidebar from '../components/sidebar-stripped';\nimport SEO from '../components/seo';\n\nimport styles from '../styles/content.module.scss';\nimport certStyles from '../styles/cert.module.scss';\n\nimport { CertQuery } from '../types/queries';\n\nconst BlogCertTemplate = ({ data }: PageProps<CertQuery>): JSX.Element => {\n  const cert = data.markdownRemark;\n  const validation = cert.frontmatter.cert_url ?\n    <a href={cert.frontmatter.cert_url} title=\"ValidaciÃ³n Online del Certificado\">\n      <FontAwesomeIcon icon={faClipboardCheck} /></a> :\n    null;\n\n  const file = cert.frontmatter.cert;\n\n  const fileEmbed = file.internal.mediaType.match(/^image\\/.*/gi) ?\n    <img src={file.publicURL} alt=\"Certificado\" className={certStyles.image} /> :\n    <embed type=\"application/pdf\" src={file.publicURL} className={certStyles.embed} />;\n\n  return (\n    <div className=\"container\">\n      <SEO title={cert.frontmatter.title} />\n      <Sidebar />\n      <article className={styles.content}>\n        <header>\n          <h1>{cert.frontmatter.title}</h1>\n          <p>\n            {cert.frontmatter.date}&nbsp;\n            -&nbsp;\n            <a href={cert.frontmatter.issuer_url} title=\"Sitio del Emisor\">{cert.frontmatter.issuer}</a>&nbsp;\n            {validation}\n          </p>\n          { fileEmbed }\n        </header>\n      </article>\n    </div>\n  );\n};\n\nexport default BlogCertTemplate;\n\nexport const pageQuery = graphql`\n  query BlogCertBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        issuer\n        issuer_url\n        cert {\n            publicURL\n            internal {\n              mediaType\n            }\n        }\n        cert_url\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}