{"componentChunkName":"component---src-templates-post-js","path":"/docker-wordpress/","result":{"data":{"site":{"siteMetadata":{"url":"https://rvaccaro.com.ar"}},"markdownRemark":{"id":"ec3c4afb-1864-5ce5-b793-aa55b1e97bd8","html":"<p>Siguiendo con el tema de Docker, uno de mis usos preferidos es utilizarlo para crear entornos locales para testear WordPress. Si bien hay una <a href=\"https://hub.docker.com/_/wordpress\">imagen</a> oficial de WordPress para Docker su configuración out-of-the-box necesita algunos ajustes para sernos de utilidad.</p>\n<p>Primero, el archivo <em>docker-compose.yml</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">mysql</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span><span class=\"token number\">5.7</span>\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"no\"</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./wordpress/database<span class=\"token punctuation\">:</span>/var/lib/mysql\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">MYSQL\\_ROOT\\_PASSWORD</span><span class=\"token punctuation\">:</span> wordpress\n      <span class=\"token key atrule\">MYSQL\\_DATABASE</span><span class=\"token punctuation\">:</span> wordpress\n      <span class=\"token key atrule\">MYSQL\\_USER</span><span class=\"token punctuation\">:</span> wordpress\n      <span class=\"token key atrule\">MYSQL\\_PASSWORD</span><span class=\"token punctuation\">:</span> wordpress\n\n  <span class=\"token key atrule\">wordpress</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">depends\\_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> mysql\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> wordpress\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 8080<span class=\"token punctuation\">:</span><span class=\"token number\">80</span>\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"no\"</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./wordpress/content<span class=\"token punctuation\">:</span>/var/www/html/wp<span class=\"token punctuation\">-</span>content\n      <span class=\"token punctuation\">-</span> ./wordpress/.htaccess<span class=\"token punctuation\">:</span>/var/www/html/.htaccess\n      <span class=\"token punctuation\">-</span> ./wordpress/php.ini<span class=\"token punctuation\">:</span>/usr/local/etc/php/conf.d/wordpress.ini\n      <span class=\"token punctuation\">-</span> &lt;build dir<span class=\"token punctuation\">></span><span class=\"token punctuation\">:</span>/var/www/html/wp<span class=\"token punctuation\">-</span>content/themes/&lt;theme name<span class=\"token punctuation\">></span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">WORDPRESS\\_DB\\_HOST</span><span class=\"token punctuation\">:</span> mysql\n      <span class=\"token key atrule\">WORDPRESS\\_DB\\_NAME</span><span class=\"token punctuation\">:</span> wordpress\n      <span class=\"token key atrule\">WORDPRESS\\_DB\\_USER</span><span class=\"token punctuation\">:</span> wordpress\n      <span class=\"token key atrule\">WORDPRESS\\_DB\\_PASSWORD</span><span class=\"token punctuation\">:</span> wordpress\n      <span class=\"token key atrule\">WORDPRESS\\_DEBUG</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'true'</span>\n\n  <span class=\"token key atrule\">adminer</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">depends\\_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> mysql\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> adminer\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"no\"</span>\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 8000<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">ADMINER\\_DEFAULT\\_SERVER</span><span class=\"token punctuation\">:</span> mysql</code></pre></div>\n<p>Como vemos, trabajo con 3 images: <em>mysql</em>, <em>wordpress</em> y <em>adminer</em>.</p>\n<p>En la primera, <em>mysql</em>, creo un volumen que apunta a <strong>./wordpress/database</strong> en el host y a <strong>/var/lib/mysql</strong> en el container lo que me permite persistir la información de la base de datos mediante el sencillo proceso de almacenar los archivos de datos de MySQL en el host. Es importante que especifiquemos la versión de MySQL en vez de usar latest, para evitar que los datos se pierdan al actualizarse el servidor.</p>\n<p>La segunda, <strong>wordpress</strong>, tiene 4 volumenes creados:</p>\n<ul>\n<li><strong>./wordpress/content</strong>, nos permite persistir plugins, themes, actualizaciones, étc.</li>\n<li><strong>./wordpress/.htaccess</strong>, nos sirve para poder trabajar con el .htaccess de WordPress. En mi caso lo utilizo para redirigir las solicitudes a la carpeta uploads al servidor de producción para no tener que replicarla cada vez que creo un container para hacer pruebas.</li>\n<li><strong>./wordpress/php.ini</strong>, nos da la posibilidad de configurar algunos parámetros de PHP. Son de particular interés el tamaño máximo de los uploads y el tiempo de ejecución ya que los por defecto son muy chicos.</li>\n<li><strong><build dir></strong>, este es el directorio donde se encuentra la build del theme (o plugin) con el que estemos trabajando.</li>\n</ul>\n<p>Con respecto a las configuraciones, si no hicimos ningún cambio en las variables de la BBDD, no hace falta tocarlas. Si no necesitamos que esté activado el debug podemos borrar la susodicha configuración o ponerla en 'false'.</p>\n<p><em>adminer</em>, necesario para poder trastear con la BBDD. La única configuración que pasamos es más un QOL que otra cosa y sirve para establecer el servidor por defecto.</p>\n<p>Una cosa importante a tener en cuenta es que, como Docker crea las carpetas correspondientes a los volúmenes con el usuario <em>root</em>, tenemos que cambiar el owner por el usuario <em>www-data</em>. Para esto, una vez creado los container, alcanza con ejecutar el siguiente comando:</p>\n<p>docker-compose exec wordpress chown www-data:www-data /var/www/html/wp-content /var/www/html/wp-content/themes</p>\n<p>Por último dejo el archivo .htaccess y php.ini que utilizo con las características antes comentadas:</p>\n<div class=\"gatsby-highlight\" data-language=\"apacheconf\"><pre class=\"language-apacheconf\"><code class=\"language-apacheconf\"><span class=\"token directive-block tag\"><span class=\"token directive-block tag\"><span class=\"token punctuation\">&lt;</span>IfModule</span><span class=\"token directive-block-parameter attr-value\"> mod\\_rewrite.c</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token directive-inline property\">RewriteEngine</span> on\n  <span class=\"token directive-inline property\">RewriteBase</span> /\n  <span class=\"token directive-inline property\">RewriteCond</span> <span class=\"token variable\">%{REQUEST</span>\\_FILENAME} !-f\n  <span class=\"token directive-inline property\">RewriteCond</span> <span class=\"token variable\">%{HTTP</span><span class=\"token regex\">\\_HOST} ^localhost:8080$</span>\n  <span class=\"token directive-inline property\">RewriteRule</span><span class=\"token regex\"> ^wp-content/uploads/(.\\*)$</span> https://server/wp-content/uploads/<span class=\"token variable\">$1</span> \\[NC,L\\]\n<span class=\"token directive-block tag\"><span class=\"token directive-block tag\"><span class=\"token punctuation\">&lt;/</span>IfModule</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token constant\">file\\_uploads</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> On</span>\n<span class=\"token constant\">memory\\_limit</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> 64M</span>\n<span class=\"token constant\">upload\\_max\\_filesize</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> 64M</span>\n<span class=\"token constant\">post\\_max\\_size</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> 64M</span>\n<span class=\"token constant\">max\\_execution\\_time</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> 600</span></code></pre></div>","frontmatter":{"title":"Docker: Wordpress","date":"May 05, 2019"}}},"pageContext":{"slug":"/docker-wordpress/","previous":{"fields":{"slug":"/docker/","source":"posts"},"frontmatter":{"title":"Docker"}},"next":{"fields":{"slug":"/docker-compose-env/","source":"posts"},"frontmatter":{"title":"Docker Compose: .env"}}}}}