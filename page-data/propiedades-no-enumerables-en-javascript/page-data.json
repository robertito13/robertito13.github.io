{"componentChunkName":"component---src-templates-post-js","path":"/propiedades-no-enumerables-en-javascript/","result":{"data":{"site":{"siteMetadata":{"url":"https://rvaccaro.com.ar"}},"markdownRemark":{"id":"d5645853-4435-5788-9eda-182ffc4aba2e","html":"<p>Hasta la especificación ES5 de JavaScript las propiedades de un objeto consistían únicamente de un nombre y un valor. A partir de 2009, fecha de publicación, se agregó la posibilidad de establecer 3 atributos de las propiedades que permiten controlar sus características:</p>\n<ul>\n<li>configurable</li>\n<li>writable</li>\n<li>enumerable</li>\n</ul>\n<h4>Configurable</h4>\n<p>Permite establecer si, luego de su creación, se podrán editar los atributos, eliminar la propiedad o modificar las funciones de acceso. Hay que tener en cuenta que una vez establecido a false, no puede volver ser modificado.</p>\n<h4>Writable</h4>\n<p>Indica si se puede modificar el valor de la propiedad mediante el uso de operadores de asignación.</p>\n<h4>Enumerable</h4>\n<p>Configura si la propiedad va a aparecer en el listado de propiedades del objeto. Por ejemplo, mediante el uso de <em>Object.keys()</em>. Si bien, en principio, no parece tener mucha utilidad es importante considerar qué otras funciones utilizan la enumeración de propiedades para ver su potencial.</p>\n<p>Ya <a href=\"https://rvaccaro.com.ar/2018/05/05/limitaciones-y-diferencias-de-object-assign-y-el-operador-de-propagacion-en-javascript/\">mencioné con anterioridad</a> que el operador de propagación y Object.assign() únicamente copian aquellas propiedades enumerables. Además, permite ocultar propiedades de los bucles <em>for ... in</em>, ya que al no ser enumeradas no son recorridas por el mismo.</p>\n<p>Pero, una de las consecuencias más útiles de establecer una propiedad como no enumerable es que serán ocultadas a JSON.stringify(). Esto nos permite tener, de forma sencilla, total control sobre la información que exponemos del objeto.</p>\n<p>var obj = {\n'prop1': 'value1'\n};\nObject.defineProperty(obj, 'prop2', { value: 'value2', enumerable: false });</p>\n<p>JSON.stringify(obj); // { prop1: value1 }</p>","frontmatter":{"title":"Propiedades no enumerables en JavaScript","date":"May 09, 2018"}}},"pageContext":{"slug":"/propiedades-no-enumerables-en-javascript/","previous":{"fields":{"slug":"/limitaciones-y-diferencias-de-object-assign-y-el-operador-de-propagacion-en-javascript/","source":"posts"},"frontmatter":{"title":"Limitaciones y diferencias de Object.assign() y el operador de propagación en JavaScript"}},"next":{"fields":{"slug":"/patron-de-carga-diferida-inicializacion-diferida/","source":"posts"},"frontmatter":{"title":"Patrón de Carga Diferida: Inicialización diferida"}}}}}